import{C as v}from"./Ranges.adf21146.js";import{W as M,L as b,X as E,O as g,q as x,t as O,S as f}from"./particle.3af7776a.js";import{Attract as A}from"./index.9290224f.js";import{E as C}from"./ExternalInteractorBase.0b0fb1e9.js";import"./index.424da776.js";const q=1,D=1,y=0;function h(s,i,t,a,c){const e=s.actualOptions.interactivity.modes.attract;if(!e)return;const o=s.particles.quadTree.query(a,c);for(const r of o){const{dx:n,dy:l,distance:u}=M(r.position,i),m=e.speed*e.factor,p=b(E(e.easing)(D-u/t)*m,q,e.maxSpeed),k=g.create(u?n/u*p:m,u?l/u*p:m);r.position.subFrom(k)}}function P(s,i){s.attract||(s.attract={particles:[]});const{attract:t}=s;if(t.finish||(t.count||(t.count=0),t.count++,t.count===s.particles.count&&(t.finish=!0)),t.clicking){const a=s.interactivity.mouse.clickPosition,c=s.retina.attractModeDistance;if(!c||c<y||!a)return;h(s,a,c,new v(a.x,a.y,c),e=>i(e))}else t.clicking===!1&&(t.particles=[])}function R(s,i){const t=s.interactivity.mouse.position,a=s.retina.attractModeDistance;!a||a<y||!t||h(s,t,a,new v(t.x,t.y,a),c=>i(c))}const d="attract";class V extends C{constructor(i,t){super(t),this._engine=i,t.attract||(t.attract={particles:[]}),this.handleClickMode=a=>{const c=this.container.actualOptions,e=c.interactivity.modes.attract;if(!(!e||a!==d)){t.attract||(t.attract={particles:[]}),t.attract.clicking=!0,t.attract.count=0;for(const o of t.attract.particles)!this.isEnabled(o)||o.velocity.setTo(o.initialVelocity);t.attract.particles=[],t.attract.finish=!1,setTimeout(()=>{t.destroyed||(t.attract||(t.attract={particles:[]}),t.attract.clicking=!1)},e.duration*x)}}}clear(){}init(){const i=this.container,t=i.actualOptions.interactivity.modes.attract;!t||(i.retina.attractModeDistance=t.distance*i.retina.pixelRatio)}interact(){const i=this.container,t=i.actualOptions,a=i.interactivity.status===O,c=t.interactivity.events,{enable:e,mode:o}=c.onHover,{enable:r,mode:n}=c.onClick;a&&e&&f(d,o)?R(this.container,l=>this.isEnabled(l)):r&&f(d,n)&&P(this.container,l=>this.isEnabled(l))}isEnabled(i){var n;const t=this.container,a=t.actualOptions,c=t.interactivity.mouse,e=((n=i==null?void 0:i.interactivity)!=null?n:a.interactivity).events;if((!c.position||!e.onHover.enable)&&(!c.clickPosition||!e.onClick.enable))return!1;const o=e.onHover.mode,r=e.onClick.mode;return f(d,o)||f(d,r)}loadModeOptions(i,...t){i.attract||(i.attract=new A);for(const a of t)i.attract.load(a==null?void 0:a.attract)}reset(){}}export{V as Attractor};
